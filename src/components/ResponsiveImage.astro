---
import { getImage } from 'astro:assets';
import type { HTMLAttributes } from 'astro/types';

interface Props {
  imagesConfig: {
    image: ImageMetadata;
    sourceProps: HTMLAttributes<'source'>;
  }[];
  alt: string;
  format?: string;
  classes?: string;
  loading?: 'lazy' | 'eager';
  fetchPriority?: 'high' | 'low' | 'auto' | null | undefined;
}
export type ResponsiveImagesConfig = Props['imagesConfig'];

const { imagesConfig, alt, format, classes, loading, fetchPriority } =
  Astro.props;

const astroImages = await Promise.all(
  imagesConfig.map((imageConfig) =>
    getImage({
      src: imageConfig.image,
      format,
      width: imageConfig.image.width,
      height: imageConfig.image.height,
    })
  )
);
---

<picture>
  {
    astroImages.map((astroImage, index) => (
      <source {...imagesConfig[index].sourceProps} srcset={astroImage.src} />
    ))
  }
  <img
    src={astroImages[astroImages.length - 1].src}
    class={classes}
    alt={alt}
    loading={loading}
    fetchpriority={fetchPriority}
  />
</picture>

<style></style>
